// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(uuid())
  no_pegawai    String? @db.VarChar(20)
  email         String  @db.VarChar(50)
  nik           String? @unique @db.VarChar(50)
  name          String  @db.VarChar(50)
  password      String  @db.VarChar(100)
  token         String? @db.VarChar(255)
  roleId        String
  dinas         String? @db.VarChar(50)
  emailVerified Boolean @default(false)

  role Role @relation(fields: [roleId], references: [id])

  @@map("users")
}

model Role {
  id   String @id @default(uuid())
  role String @db.VarChar(50)

  users User[]

  @@map("roles")
}

model Participant {
  id                          String    @id @default(uuid())
  no_pegawai                  String?   @db.VarChar(20)
  nama                        String    @db.VarChar(50)
  nik                         String    @unique @db.VarChar(50)
  dinas                       String?   @db.VarChar(50)
  bidang                      String?   @db.VarChar(50)
  perusahaan                  String?   @db.VarChar(50)
  email                       String    @db.VarChar(50)
  no_telp                     String?   @db.VarChar(50)
  negara                      String?   @db.VarChar(50)
  tempat_lahir                String?   @db.VarChar(50)
  tanggal_lahir               DateTime? @db.Date
  sim_a                       Bytes?
  sim_a_name                  String?   @db.VarChar(255)
  sim_b                       Bytes?
  sim_b_name                  String?   @db.VarChar(255)
  ktp                         Bytes?
  ktp_name                    String?   @db.VarChar(255)
  foto                        Bytes?
  foto_name                   String?   @db.VarChar(255)
  surat_sehat_buta_warna      Bytes?
  surat_sehat_buta_warna_name String?   @db.VarChar(255)
  exp_surat_sehat             DateTime? @db.Date
  surat_bebas_narkoba         Bytes?
  surat_bebas_narkoba_name    String?   @db.VarChar(255)
  exp_bebas_narkoba           DateTime? @db.Date
  link_qr_code                String?   @db.VarChar(255)
  qr_code                     Bytes?
  gmf_non_gmf                 String?   @db.VarChar(20)

  @@map("participants")
}

model Capability {
  id            String @id @default(uuid())
  kode_rating   String @db.VarChar(20)
  kode_training String @db.VarChar(50)
  nama_training String @db.VarChar(50)

  // Relasi one-to-many ke CurriculumSyllabus
  curriculums CurriculumSyllabus?

  @@map("capability")
}

model CurriculumSyllabus {
  id           String     @id @default(uuid())
  capabilityId String     @unique
  capability   Capability @relation(fields: [capabilityId], references: [id])
  total_durasi Int

  // Relasi ke pivot tabel
  regulasiGSEs RegulasiGSECurriculumSyllabus[]
  kompetensis  KompetensiCurriculumSyllabus[]

  @@map("curriculum_syllabus")
}

model RegulasiGSE {
  id      String @id @default(uuid())
  reg_gse String @db.VarChar(50)

  // Tidak ada durasi di sini, durasi dipindahkan ke pivot table
  regulasiSyllabus RegulasiGSECurriculumSyllabus[]

  @@map("regulasi_gse")
}

model Kompetensi {
  id         String @id @default(uuid())
  kompetensi String @db.VarChar(50)

  // Tidak ada durasi di sini, durasi dipindahkan ke pivot table
  kompetensiSyllabus KompetensiCurriculumSyllabus[]

  @@map("kompetensi")
}

model RegulasiGSECurriculumSyllabus {
  id             String @id @default(uuid())
  durasi_teori   Int
  durasi_praktek Int
  curriculumId   String
  regulasiGSEId  String

  curriculum  CurriculumSyllabus @relation(fields: [curriculumId], references: [id])
  regulasiGSE RegulasiGSE        @relation(fields: [regulasiGSEId], references: [id])

  @@map("regulasi_gse_curriculum_syllabus")
}

model KompetensiCurriculumSyllabus {
  id             String @id @default(uuid())
  durasi_teori   Int
  durasi_praktek Int
  curriculumId   String
  kompetensiId   String

  curriculum CurriculumSyllabus @relation(fields: [curriculumId], references: [id])
  kompetensi Kompetensi         @relation(fields: [kompetensiId], references: [id])

  @@map("kompetensi_curriculum_syllabus")
}
