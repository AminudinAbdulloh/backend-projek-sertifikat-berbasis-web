// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  no_pegawai      String?   @db.VarChar(20)
  email           String    @db.VarChar(50)
  nik             String?   @unique @db.VarChar(50)
  name            String    @db.VarChar(50)
  password        String    @db.VarChar(100)
  token           String?   @db.VarChar(255)
  roleId          String
  dinas           String?   @db.VarChar(50)
  emailVerified   Boolean   @default(false)

  role            Role      @relation(fields: [roleId], references: [id])

  @@map("users")
}

model Role {
  id    String  @id @default(uuid())
  role  String  @db.VarChar(50)

  users User[]

  @@map("roles")
}

model Participant {
  id                          String              @id @default(uuid())
  no_pegawai                  String?             @db.VarChar(20)
  nama                        String              @db.VarChar(50)
  nik                         String              @unique @db.VarChar(50)
  dinas                       String?             @db.VarChar(50)
  bidang                      String?             @db.VarChar(50)
  perusahaan                  String?             @db.VarChar(50)
  email                       String              @db.VarChar(50)
  no_telp                     String?             @db.VarChar(50)
  negara                      String?             @db.VarChar(50)
  tempat_lahir                String?             @db.VarChar(50)
  tanggal_lahir               DateTime?           @db.Date
  sim_a                       Bytes?
  sim_a_name                  String?             @db.VarChar(255)
  sim_b                       Bytes?
  sim_b_name                  String?             @db.VarChar(255)
  ktp                         Bytes?
  ktp_name                    String?             @db.VarChar(255)
  foto                        Bytes?
  foto_name                   String?             @db.VarChar(255)
  surat_sehat_buta_warna      Bytes?
  surat_sehat_buta_warna_name String?             @db.VarChar(255)
  exp_surat_sehat             DateTime?           @db.Date
  surat_bebas_narkoba         Bytes?
  surat_bebas_narkoba_name    String?             @db.VarChar(255)
  exp_bebas_narkoba           DateTime?           @db.Date
  link_qr_code                String?             @db.VarChar(255)
  qr_code                     Bytes?
  gmf_non_gmf                 String?             @db.VarChar(20)

  ParticipantsCOT             ParticipantsCOT[]

  @@map("participants")
}

model Capability {
  id                                String                  @id @default(uuid())
  kode_rating                       String                  @db.VarChar(20)
  kode_training                     String                  @db.VarChar(50)
  nama_training                     String                  @db.VarChar(50)
  total_durasi_teori_reg_gse        Int?
  total_durasi_praktek_reg_gse      Int?
  total_durasi_teori_kompetensi     Int?
  total_durasi_praktek_kompetensi   Int?                

  curriculum_syllabus               CurriculumSyllabus[]
  COT                               COT?

  @@map("capability")
}

model CurriculumSyllabus {
  id              String      @id @default(uuid())
  capabilityId    String
  nama            String      @db.VarChar(50)
  durasi_teori    Int
  durasi_praktek  Int
  type            String      @db.VarChar(20)

  capability      Capability  @relation(fields: [capabilityId], references: [id])

  @@map("curriculum_syllabus")
}

model COT {
  id                              String              @id @default(uuid())
  capabilityId                    String              @unique
  kode_cot                        String              @db.VarChar(20)
  tanggal_mulai                   DateTime
  tanggal_selesai                 DateTime
  lokasi_training                 String              @db.VarChar(50)
  instruktur_regulasi_gse         String              @db.VarChar(50)
  instruktur_teori_regulasi_gse   String              @db.VarChar(50)
  instruktur_praktek1             String              @db.VarChar(50)
  instruktur_praktek2             String              @db.VarChar(50)
  status                          Boolean

  Capabillity                     Capability          @relation(fields: [capabilityId], references: [id])
  ParticipantsCOT                 ParticipantsCOT[]

  @@map("COT")
}

model ParticipantsCOT {
  id              String        @id @default(uuid())
  participantId   String
  cotId           String

  participant     Participant   @relation(fields: [participantId], references: [id])
  cot             COT           @relation(fields: [cotId], references: [id])
  Sertifikat      Sertifikat[]

  @@map("participants_cot")
}

model Signature {
  id          String        @id @default(uuid())
  no_pegawai  String        @db.VarChar(20)
  role        String        @db.VarChar(50)
  name        String        @db.VarChar(50)
  e_sign      Bytes
  status      Boolean

  Sertifikat  Sertifikat[]

  @@map("signature")
}

model Sertifikat {
  id                  String            @id @default(uuid())
  participant_cot_id  String
  signatureId         String
  no_sertifikat       String            @db.VarChar(50)
  kehadiran           Boolean
  nilai_teori         Float
  nilai_praktek       Float
  status              Boolean

  participantsCOT     ParticipantsCOT   @relation(fields: [participant_cot_id], references: [id])
  Signature           Signature         @relation(fields: [signatureId], references: [id])

  @@map("sertifikat")
}
