// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  noPegawai       String?   @unique @db.VarChar(20)
  email           String    @db.VarChar(50)
  nik             String?   @unique @db.VarChar(50)
  name            String    @db.VarChar(50)
  password        String    @db.VarChar(100)
  token           String?   @db.VarChar(255)
  roleId          String
  dinas           String?   @db.VarChar(50)
  emailVerified   Boolean   @default(false)

  role            Role      @relation(fields: [roleId], references: [id])

  @@map("users")
}

model Role {
  id    String  @id @default(uuid())
  role  String  @db.VarChar(50)

  users User[]

  @@map("roles")
}

model Participant {
  id                          String              @id @default(uuid())
  noPegawai                   String?             @unique @db.VarChar(20)
  nama                        String              @db.VarChar(50)
  nik                         String              @unique @db.VarChar(50)
  dinas                       String?             @db.VarChar(50)
  bidang                      String?             @db.VarChar(50)
  perusahaan                  String?             @db.VarChar(50)
  email                       String              @db.VarChar(50)
  noTelp                      String?             @db.VarChar(50)
  negara                      String?             @db.VarChar(50)
  tempatLahir                 String?             @db.VarChar(50)
  tanggalLahir                DateTime?           @db.Date
  simA                        Bytes?
  simAFileName                String?             @db.VarChar(255)
  simB                        Bytes?
  simBFileName                String?             @db.VarChar(255)
  ktp                         Bytes?
  ktpFileName                 String?             @db.VarChar(255)
  foto                        Bytes?
  fotoFileName                String?             @db.VarChar(255)
  suratSehatButaWarna         Bytes?
  suratSehatButaWarnaFileName String?             @db.VarChar(255)
  expSuratSehatButaWarna      DateTime?           @db.Date
  suratBebasNarkoba           Bytes?
  suratBebasNarkobaFileName   String?             @db.VarChar(255)
  expSuratBebasNarkoba        DateTime?           @db.Date
  linkQrCode                  String?             @db.VarChar(255)
  qrCode                      Bytes?
  gmfNonGmf                   String?             @db.VarChar(20)

  ParticipantsCOT             ParticipantsCOT[]

  @@map("participants")
}

model Capability {
  id                                String                  @id @default(uuid())
  kodeRating                        String                  @db.VarChar(20)
  kodeTraining                      String                  @db.VarChar(50)
  namaTraining                      String                  @db.VarChar(50)
  totalDurasiTeoriRegGse            Int?
  totalDurasiPraktekRegGse          Int?
  totalDurasiTeoriKompetensi        Int?
  totalDurasiPraktekKompetensi      Int?
  totalDurasi                       Int?                

  curriculumSyllabus                CurriculumSyllabus[]
  COT                               COT?

  @@map("capability")
}

model CurriculumSyllabus {
  id              String      @id @default(uuid())
  capabilityId    String
  nama            String      @db.VarChar(50)
  durasiTeori     Int
  durasiPraktek   Int
  type            String      @db.VarChar(20)

  capability      Capability  @relation(fields: [capabilityId], references: [id])

  @@map("curriculumSyllabus")
}

model COT {
  id                              String              @id @default(uuid())
  capabilityId                    String              @unique
  kodeCot                         String              @db.VarChar(20)
  tanggalMulai                    DateTime
  tanggalSelesai                  DateTime
  lokasiTraining                  String              @db.VarChar(50)
  instrukturRegulasiGse           String              @db.VarChar(50)
  instrukturTeoriRegulasiGse      String              @db.VarChar(50)
  instrukturPraktek1              String              @db.VarChar(50)
  instrukturPraktek2              String              @db.VarChar(50)
  status                          Boolean             @default(false)

  Capabillity                     Capability          @relation(fields: [capabilityId], references: [id])
  ParticipantsCOT                 ParticipantsCOT[]

  @@map("COT")
}

model ParticipantsCOT {
  id              String        @id @default(uuid())
  participantId   String
  cotId           String

  participant     Participant   @relation(fields: [participantId], references: [id])
  cot             COT           @relation(fields: [cotId], references: [id])
  Sertifikat      Sertifikat[]

  @@map("participantsCot")
}

model Signature {
  id          String        @id @default(uuid())
  noPegawai   String        @db.VarChar(20)
  role        String        @db.VarChar(50)
  name        String        @db.VarChar(50)
  eSign       Bytes
  status      Boolean       @default(false)

  Sertifikat  Sertifikat[]

  @@map("signature")
}

model Sertifikat {
  id                  String            @id @default(uuid())
  participantCotId    String
  signatureId         String
  noSertifikat        String            @db.VarChar(50)
  kehadiran           Boolean
  nilaiTeori          Float
  nilaiPraktek        Float
  status              Boolean           @default(true)

  participantsCOT     ParticipantsCOT   @relation(fields: [participantCotId], references: [id])
  Signature           Signature         @relation(fields: [signatureId], references: [id])

  @@map("sertifikat")
}
